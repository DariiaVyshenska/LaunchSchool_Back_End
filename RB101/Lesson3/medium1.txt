1)
  10.times {|i| puts (" " * i) + "The Flintstones Rock!"}
2)
  The error (TypeError) occurs because we are trying to concatenate a string and an integer.
  For this line to work properle we first need to convert integer into the string.
  puts "the value of 40 + 2 is " + (40 + 2).to_s
  puts "the value of 40 + 2 is #{(40 + 2)}"
3)
  Bonus 1. The line is checking if we have any reminder after division of these
  two numbers. If we do not use it, we will have duplicated of factors in our 
  output. 
  Bonus 2. the purpose is to return an array of factors (it is a shortened 
  version of 'return factors'. if we forget to include it, our return value 
  will be nil
4)
  The main difference is that the first function will modify the original buffer
  and return the modified version as well.
  But the second function will keep the initial buffer intact and return modified
  version of the buffer.
5)
  He got an error because variable 'limit' is used in the method but is not
  included to the method as an argumet. Methods in ruby do not have access to the
  variables of the outer scope unless these variables are passed into the method 
  as an argumet. 
  to correct it. For the method definition we can put 'def fib(first_num, second_num)'
  and for the method invocation we should put 'result = fib(0, 1, 15)'
6)
  34 - reassignment of the variable in the method does not mutate the original
  variable
7)
  The function changed the initial hash because now we are using not '=' but
  'hash[key]=value' method. And this method mutates the caller. Because we call []= on the 
  initial hash (we did not reassign it to another variable, it is passed into the
  method as a pointer, passed by reference)
8)
  "paper"
9)
  "no"
